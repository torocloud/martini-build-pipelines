version: 0.2

phases:
  # This is the Install part of the build
  install:
    commands:
      - echo Installing ZIP tool...
      - apt-get -y install zip unzip
      # The echo command displays what is happening within the commands section
  pre_build:
    commands:
      - echo Installing JQ...
      - apt-get -y install jq
      # As seen above we installed the zip unzip and JQ commands which we will use in the actual build
      # Now this is where the actual build will start
      - cd packages
      # At this point we went and changed our directory into "packages"
      - zip -r ../aws-package-bernardo.zip aws-package-bernardo/*
      # Then using the zip command we installed before we can now zip our package created in our local
artifacts:
  files:
  # Here we have to set our zip file as an artifact so it would be available across the pipeline
    - aws-package-bernardo.zip
  build:
    commands:
      - echo Retrieving access token...
      - token=$(curl -X POST $ToroTokenUrl -H 'Accept:application/json' -H 'Content-Type:application/x-www-form-urlencoded' -d "grant_type=password&username="$UsernameToro"&password="$PasswordToro"&client_id=TOROMartini&client_secret=TOROMartini" | jq -r .access_token)
      - echo Uploading Martini Package...
      - curl -X POST "$ToroServer/esbapi/packages/upload?stateOnCreate=STARTED&replaceExisting=true" -H "accept:application/json" -H "Content-Type:multipart/form-data" -F "file=@aws-package-bernardo.zip;type=application/x-zip-compressed" -H "Authorization:Bearer $token"
      # The above commands are to get the access token and use it to access the server for deployment
      # Using the JQ command we installed before we can now parse the JSON response used in the commands above
  post_build:
    commands:
      - echo Build completed...